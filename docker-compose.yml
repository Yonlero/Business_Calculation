version: "3.8"

services:
  postgres:
    image: postgres:latest
    container_name: Postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: business_db
    ports:
      - "5432:5432"
    networks:
      - business_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: Zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - business_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: Kafka-Node-1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9093:9093"
      - "9092:9092"
    networks:
      - business_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: Kafka-UI
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: Business_Cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "9090:8080"
    networks:
      - business_network

networks:
  business_network:
    driver: bridge

volumes:
  postgres_data:
